# Simple Lambda Function 
echo_word = (lambda word1, echo: word1 * echo)
result = echo_word('hey',5)
print(result)

# Combine Lambda Function with map()
spells = ["protego", "accio", "expecto patronum", "legilimens"]
shout_spells = map(lambda item: item + '!!!', spells)
shout_spells_list = list(shout_spells)
print(shout_spells_list)

# Combine Lambda Function with filter()
fellowship = ['frodo', 'samwise', 'merry', 'pippin', 'aragorn', 'boromir', 'legolas', 'gimli', 'gandalf']
result = filter(lambda member: (len(member) > 6), fellowship)
result_list = list(result)
print(result_list)

# Combine Lambda Function with reduce()
from functools import reduce
stark = ['robb', 'sansa', 'arya', 'brandon', 'rickon']
result = reduce(lambda item1, item2: item1 + item2, stark)
print(result)

# Write error messages for your function
# try - except
def shout_echo(word1, echo=1):
    """Concatenate echo copies of word1 and three
    exclamation marks at the end of the string."""
    
    echo_word = ''
    shout_words = ''

    try:
        echo_word = word1 * echo
        shout_words = echo_word + '!!!'
    except:
        print("word1 must be a string and echo must be an integer.")
    return shout_words

shout_echo("particle", echo="accelerator")

# raise() to show the error type
def shout_echo(word1, echo=1):
    """Concatenate echo copies of word1 and three
    exclamation marks at the end of the string."""

    # Raise an error with raise
    if echo < 1:
        raise ValueError('echo must be greater than or equal to 0')

    echo_word = word1 * echo

    shout_word = echo_word + '!!!'

    return shout_word

shout_echo("particle", echo=5)









