# Basic function definition and call
def shout(word):
    """Return a string with three exclamation marks"""
    # Concatenate the strings: shout_word
    shout_word = word + '!!!'

    # Replace print with return
    return(shout_word)

# Pass 'congratulations' to shout: yell
yell = shout('congratulations')

# Print yell
print(yell)


# Return double outputs
def shout_all(word1, word2):
    """Return a tuple of strings"""
    shout1 = word1 + '!!!'
    shout2 = word2 + '!!!'
    shout_words = (shout1, shout2)
    return shout_words

# Pass 'congratulations' and 'you' to shout_all(): yell1, yell2
yell1, yell2 = shout_all('congratulations', 'you')

print(yell1)
print(yell2)

# Word count for twitter posts
import pandas as pd
df = pd.read_csv('tweets.csv')
langs_count = {}
col = df['lang']
for entry in col:
    if entry in langs_count.keys():
        langs_count[entry] += 1
    else:
        langs_count[entry] = 1
print(langs_count)

# Global a variable
team = "teen titans"
def change_team():
    """Change the value of the global variable team."""
    global team
    team = 'justice league'
print(team)

# Nested Functions
def three_shouts(word1, word2, word3):
    """Returns a tuple of strings
    concatenated with '!!!'."""
    
    def inner(word):
        """Returns a string concatenated with '!!!'."""
        return word + '!!!'
    return (inner(word1), inner(word2), inner(word3))

print(three_shouts('a', 'b', 'c'))

# Another great nested functions
def echo(n):
    """Return the inner_echo function."""
    def inner_echo(word1):
        """Concatenate n copies of word1."""
        echo_word = word1 * n
        return echo_word
    return inner_echo

twice = echo(2)

thrice = echo(3)

print(twice('hello'), thrice('hello'))


# Arbitrary number of string inputs
def gibberish(*args):
    """Concatenate strings in *args together."""

    hodgepodge = ''

    for word in args:
        hodgepodge += word

    return hodgepodge

one_word = gibberish('luke')
many_words = gibberish("luke", "leia", "han", "obi", "darth")


#kwargs example
def report_status(**kwargs):
    """Print out the status of a movie character."""
    print("\nBEGIN: REPORT\n")

    for key, value in kwargs.items():
        print( key + ": " + value)
    print("\nEND REPORT")

report_status(name='luke',affiliation='jedi',status='missing')

report_status(name='anakin', affiliation='sith lord', status='deceased')



